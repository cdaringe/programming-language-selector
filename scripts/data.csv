category,trait,trait_scalar,javascript,javascript_comment,typescript,typescript_comment,rust,rust_comment,python,python_comment,java,java_comment
correctness,modeled fallibility,3,1,"present in exceptions, null, undefined, cb sigs. extremely non-uniform, but present",2,"present in exceptions, null, undefined, cb sigs. extremely non-uniform, but present. however, strict mode allows for greatly improved detection, even if modeling not uniform",3,universal monadic impls,2,"None, exception",2,"null, Exception"
correctness,memory safety - compile time,3,na,,na,,3,,na,,na,
correctness,memory safety - run time,3,3,,3,,3,,3,,3,
correctness,"collection transforms (e.g. functional operators, functor, iter streams/xforms, etc)",2,2,basic functional ops and iter capabilities,2,basic functional ops and iter capabilities,3,entirely unmatched iter tooling with extremely productive and capable batteries,1,"procedural loops and comprehensions only, weak functional iter capabilities. itertools package common, but pales in comparison to other langs",2,"diverse selection of iter tooling, including streams() intfcs, but lesser than the competion"
correctness,laziness,1,1,generators,1,generators,2,"async naturally lazy, generators, ...mainly opt in",1,,1,
correctness,types - existant,3,na,,3,,3,,0,"typings module is inadequate for all entirely non-trival typing, that it's existence, presence is extremely week",3,
correctness,types - type mapping,1,na,,3,,2,"there, less ergo: https://stackoverflow.com/a/67532477/1438908",0,,0,https://docs.oracle.com/javase/tutorial/java/generics/index.html
correctness,types - inference,2,na,,3,,3,,0,,2,
correctness,types - alegbraic,2,na,,2,,1,"https://stackoverflow.com/questions/45065518/how-to-show-that-the-rust-type-system-supports-algebraic-data-types-adts, but standard algebraic operations are not as easily expressable as FP",0,,0,
correctness,types - completeness,3,na,,2,"you can mix ts/js, but it's not what is observed in practice at user level. package level source language variance is high, with plenty of JS deps",3,,0,,3,
correctness,"types - advanced (dependent, hkt, etc)",1,na,,1,,1,???,0,,0,
correctness,types - structual,1,na,,3,,0,https://beachape.com/blog/2021/05/25/structural-typing-in-rust/,0,,0,
correctness,types - nominal,1,na,,2,"branding is easy, but 3p",3,,0,,3,
developer ux,paradigm - functional,0,2,,2,fp is harder without hkt,2,,1,,1,
developer ux,paradigm - procedural,0,3,,3,,2,,3,,1,
developer ux,paradigm - oop,0,3,,3,,3,,3,,3,
developer ux,meta-programming,1,0,,0,,3,,0,,2,
developer ux,debugger,1,3,,3,,1,,2,,2,
developer ux,ide - syntax,1,3,,3,,3,,3,,3,
developer ux,ide - launch,1,3,,3,,3,,3,,3,
developer ux,ide - completions,1,3,,3,,3,,3,,3,
developer ux,ide - task execution,1,3,,3,,3,,3,,3,
developer ux,learning - teachable,2,3,,3,,3,,3,,3,
developer ux,learning - accessible,1,3,,3,,3,,3,,3,
developer ux,project - hydration/bootstrap,1,3,"clone, npm i, npm start",3,,3,,2,,1,
performance,efficent machine code,3,na,,na,,3,,na,,na,
performance,efficent bytecode code,2,3,,3,,na,,1,,3,
performance,abstractions - memory cost,3,1,astractions often cost objects,2,"astractions often cost objects, but fancy types can reduce weight",3,,1,abstractions = classes,1,
performance,abstractions - cpu cost,3,3,,3,,3,,3,,3,
performance,common compile duration,1,na,,2,,1,,na,,2,
developer ux,batteries - standard modules,1,1,3p libs oft required,1,,2,,3,,3,
developer ux,batteries - testing,1,1,"none, but clear 3p winners",1,"none, but clear 3p winners",3,,3,,1,"none, but clear 3p winners"
developer ux,batteries - project/repo management,2,3,"unmatched, npm + scripts + deps",3,"unmatched, npm + scripts + deps",2,,1,"setup.py, non std impl patterns",1,"swaths of metadata, oft ide driven for common project. present, but compare to others"
ecosystem,batteries - packaging & distribution,3,3,unmatched,3,unmatched,2,,1,"famously non std toolkits (requirements, pip-lock, etc)",2,
ecosystem,module abundance,3,3,unmatched,3,unmatched,3,,3,,2,https://vegibit.com/wp-content/uploads/2018/05/npm-package-counts.png
community,support - community,3,3,,3,,3,,3,,3,
community,support - enterprise,1,3,,3,,3,,3,,3,
ecosystem,tooling - builds,1,3,,3,,3,,3,,3,
ecosystem,tooling - ci/cd,1,3,,3,,3,,3,,3,
ecosystem,tooling - asset management,1,3,,3,,3,,3,,3,
ecosystem,maturity,2,3,,3,,2,,3,,3,
hiring,hiring availability,2,3,,2,,1,,3,,3,